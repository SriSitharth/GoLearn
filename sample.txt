import 'package:flutter/material.dart';
import 'package:samplesite/login.dart';
import 'package:samplesite/register.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_storage/firebase_storage.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:samplesite/user.dart';
import 'firebase_options.dart';

Future main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(MyApp());
}

final navigatorKey = GlobalKey<NavigatorState>();

//StatelessWidget
class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      navigatorKey: navigatorKey,
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        cardColor: Colors.lightGreen,
        primarySwatch: Colors.green,
      ),
      home: MyHomePage(title: 'Go Learn'),
      //To remove the debug banner
      debugShowCheckedModeBanner: false,
    );
  }
}

//StatefulWidget
class MyHomePage extends StatefulWidget {
  MyHomePage({super.key, required this.title});

  final String title;
  final storage = FirebaseStorage.instance;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final usercontroller = TextEditingController();
  final passcontroller = TextEditingController();

  @override
  void dispose() {
    usercontroller.dispose();
    passcontroller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(widget.title),
      ),

      //Used for Drawer
      drawer: Drawer(
        backgroundColor: Color.fromARGB(255, 123, 201, 123),
        child: ListView(
          children: <Widget>[
            DrawerHeader(
              child: Text("Profile"),
            ),
            ListTile(
              title: Text('Home'),
              leading: Icon(Icons.home),
            ),
            Divider(
              height: 0.3,
            ),
            ListTile(
              title: Text('Program'),
              leading: Icon(Icons.contacts),
            ),
            Divider(
              height: 0.3,
            ),
            ListTile(
                title: Text('Course'),
                leading: Icon(Icons.leaderboard_outlined)),
            Divider(
              height: 0.3,
            ),
            ListTile(
              title: Text('About'),
              leading: Icon(Icons.people),
            ),
            Divider(
              height: 0.3,
            ),
          ],
        ),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            //Heading
            Container(
              padding: EdgeInsets.only(top: 40),
              decoration: BoxDecoration(
                borderRadius: BorderRadius.circular(200),
              ),
              child: Center(
                child: Text(
                  'Login Here',
                  style: TextStyle(
                      fontSize: 45,
                      color: Colors.green,
                      fontWeight: FontWeight.bold),
                ),
              ),
            ),

            //Username
            Container(
              padding: EdgeInsets.all(10),
              child: TextField(
                controller: usercontroller,
                decoration: InputDecoration(
                    border: OutlineInputBorder(),
                    labelText: 'User Name',
                    hintText: 'Enter Valid Mail Id'),
              ),
            ),

            //Password
            Container(
              padding: EdgeInsets.all(10),
              child: TextField(
                controller: passcontroller,
                obscureText: true,
                decoration: InputDecoration(
                    border: OutlineInputBorder(),
                    labelText: 'Password',
                    hintText: 'Enter Your Secure Password'),
              ),
            ),

            //Login Button
            Container(
              height: 50,
              width: 200,
              decoration: BoxDecoration(
                  color: Colors.green, borderRadius: BorderRadius.circular(20)),
              child: ElevatedButton(
                onPressed: () {
                  signIn();
                  userLogin();
                  print("logined");
                },
                child: Text(
                  'Login',
                  style: TextStyle(color: Colors.white, fontSize: 25),
                ),
              ),
            ),

            //Register Button
            Container(
              margin: EdgeInsets.all(10),
              height: 40,
              width: 140,
              decoration: BoxDecoration(
                  color: Colors.green, borderRadius: BorderRadius.circular(20)),
              child: ElevatedButton(
                onPressed: () {
                  Navigator.push(context,
                      MaterialPageRoute(builder: (context) => UserRegister()));
                },
                child: Text(
                  'Register',
                  style: TextStyle(color: Colors.white, fontSize: 20),
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  Future signIn() async {
    showDialog(
        context: context,
        barrierDismissible: false,
        builder: (context) => Center(
              child: CircularProgressIndicator(),
            ));

    try {
      await FirebaseAuth.instance.signInWithEmailAndPassword(
        email: usercontroller.text.trim(),
        password: passcontroller.text.trim(),
      );
    } on FirebaseAuthException catch (e) {
      if (e.code == 'weak-password') {
        print('The password provided is too weak');
      } else if (e.code == 'email-already-in-use') {
        print('The account already exists for that email');
      }
    }
    navigatorKey.currentState!.popUntil((route) => route.isFirst);
  }
}
